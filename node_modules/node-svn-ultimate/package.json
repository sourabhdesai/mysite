{
  "name": "node-svn-ultimate",
  "description": "The ultimate SVN wrapper for node. Contains all the basic methods checkout, update, info, etc, and includes svnmucc support.",
  "version": "0.0.7",
  "homepage": "https://github.com/peteward44/node-svn-ultimate",
  "repository": {
    "type": "git",
    "url": "https://github.com/peteward44/node-svn-ultimate.git"
  },
  "author": {
    "name": "Pete Ward",
    "email": "peteward44@gmail.com"
  },
  "main": "./index.js",
  "keywords": [
    "svn"
  ],
  "dependencies": {
    "fs.extra": "^1.3.2",
    "semver": "^4.3.1",
    "xml2js": "^0.4.5"
  },
  "devDependencies": {
    "mocha": "^2.1.0",
    "should": "^5.0.1"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/peteward44/gulp-artifactory-upload/blob/master/LICENSE"
    }
  ],
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/peteward44/node-svn-ultimate/issues"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha"
  },
  "readme": "# node-svn-ultimate\nThe ultimate SVN wrapper for node. Contains all the methods exposed by the command line svn tool, including checkout, update, info, etc, and includes svnmucc support.\n\nHas methods for manipulating both working copies and the repo directly.\n\nAll direct svn command line functions are exposed through the commands object, and accept the same parameters as the command line tool.\n\nUtility methods are provided through a util object.\n\n```\nnpm install node-svn-ultimate --save\n```\n\nExample usage\n\n```\nvar svnUltimate = require('node-svn-ultimate');\n\nsvnUltimate.commands.checkout( 'https://my.url/svn/repo', '/home/user/checkout', function( err ) {\n\tconsole.log( \"Checkout complete\" );\n} );\n\nsvnUltimate.commands.update( '/home/user/checkout',\n\t{\t// optional options object - can be passed to any command not just update\n\t\ttrustServerCert: true,\t// same as --trust-server-cert\n\t\tusername: \"username\",\t// same as --username\n\t\tpassword: \"password\",\t// same as --password\n\t\tshell: \"sh\", \t\t\t// override shell used to execute command\n\t\tcwd: process.cwd(),\t\t// override working directory command is executed\n\t\tquiet: true,\t\t\t// provide --quiet to commands that accept it\n\t\tforce: true,\t\t\t// provide --force to commands that accept it\n\t\trevision: 33050,\t\t// provide --revision to commands that accept it\n\t\tdepth: \"empty\",\t\t\t// provide --depth to commands that accept it\n\t\tignoreExternals: true,\t// provide --ignore-externals to commands that accept it\n\t\tparams: [ '-m \"Commit comment\"' ] // extra parameters to pass\n\t},\n\tfunction( err ) {\n\t\tconsole.log( \"Update complete\" );\n\t} );\n\t\n```\n\nUtility methods\n\n```\n// Gets the working copy revision or the HEAD revision if the target is a URL\nsvnUltimate.util.getRevision( 'https://my.url/svn/repo', function( err, revision ) {\n\tconsole.log( \"Head revision=\" + revision );\n} );\n\nvar obj = svnUltimate.util.parseUrl( 'https://my.url/svn/repo/trunk' );\n// this call will return an object comprising of\nobj = {\n\trootUrl: 'https://my.url/svn/repo',\n\ttype: 'trunk', // either trunk, tags, or branches\n\ttypeName: '1.3.5' // only populated if a tag or a branch, name of the tag or branch\n\ttrunkUrl: 'https://my.url/svn/repo/trunk',\n\ttagsUrl: 'https://my.url/svn/repo/tags',\n\tbranchesUrl: 'https://my.url/svn/repo/branches'\n};\n\n\nsvnUltimate.util.getTags( 'https://my.url/svn/repo/trunk', function( err, tagsArray ) {\n\t// tagsArray will be an array of strings containing all tag names\n} );\n\nsvnUltimate.util.getLatestTag( 'https://my.url/svn/repo/trunk', function( err, latestTag ) {\n\t// latestTag will be the most recent tag, worked out by semver comparison (not the date it was created)\n} );\n\n```\n\n",
  "_id": "node-svn-ultimate@0.0.7",
  "dist": {
    "shasum": "3edb62c01c0263d767d70cf4a93ca00ce7f9394a"
  },
  "_from": "node-svn-ultimate@",
  "_resolved": "https://registry.npmjs.org/node-svn-ultimate/-/node-svn-ultimate-0.0.7.tgz"
}
