{
  "name": "wikifetch",
  "directories": {
    "lib": "./lib",
    "bin": "./bin"
  },
  "main": "./lib/index.js",
  "bin": {
    "wikifetch": "./bin/wikifetch.js"
  },
  "version": "0.0.1",
  "author": {
    "name": "Ben Coe",
    "email": "bencoe@gmail.com"
  },
  "engines": [
    "node"
  ],
  "description": "Uses jQuery to return a structured JSON representation of a Wikipedia article.",
  "keywords": [
    "crawler",
    "twitter",
    "public-timeline"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/bcoe/wikifetch.git"
  },
  "dependencies": {
    "request": ">=2.9.203",
    "jquery": ">=1.6.3",
    "sexy-args": ">=1.1.5",
    "optimist": "0.3.4",
    "micro-test": "1.0.0"
  },
  "readme": "WikiFetch\n=========\n\nAuthor: [@benjamincoe](https://twitter.com/#/benjamincoe)\n\nProblem\n-------\n\nFor some NLP research I'm currently doing, I was interested in parsing structured information from Wikipedia articles.\n\nI did not want to use a full-featured MediaWiki parser:\n\n* this would be heavy-handed, all I really wanted was: the text contents from articles, images, and links to other articles.\n* I wanted to be able to extend the approach to other websites, e.g., Reuters.\n* I wanted to use a crawler-based approach, rather than downloading a massive dataset.\n\nThe Solution\n------------\n\nWikiFetch Crawls a Wikipedia article using Node.js and jQuery. It returns a structured JSON-representation of the page:\n\n```javscript\n\t{\n\t\t\"title\": \"Foobar Article\",\n\t\t\"links\": {\n\t\t\t\"Link_to_another_article: {\n\t\t\t\t\"text\": \"Another article.\", // the text that was linked.\n\t\t\t\t\"title\": \"Another_article.\", // title attribute <a/> tag.\n\t\t\t\t\"occurrences\": 1 // number of times this article was linked.\n\t\t\t}\n\t\t},\n\t\t\"sections\": {\n\t\t\t\"Section Heading\": {\n\t\t\t\ttext: \"text contents of section.\",\n\t\t\t\timages: [\"http://foobar.jpg\"] // images occurring within this section.\n\t\t\t}\n\t\t}\n\t}\n```\n\n* Links within sections are replaced with [[article name]], which will have a corresponding entry in **links**.\n\nUsage\n-----\n\n```bash\nnpm install wikifetch -g\nbirdeater --article=Dogs\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bcoe/wikifetch/issues"
  },
  "homepage": "https://github.com/bcoe/wikifetch",
  "_id": "wikifetch@0.0.1",
  "dist": {
    "shasum": "56a0ff3d694895fd55fb67a0d2aee8b962f4a516"
  },
  "_from": "wikifetch@0.0.1",
  "_resolved": "https://registry.npmjs.org/wikifetch/-/wikifetch-0.0.1.tgz"
}
